# This is a basic workflow to help you get started with Actions

name: CI Example

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

jobs:
  build32:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Create Build Directory
        run: cmake -E make_directory ${{github.workspace}}/build
             echo cmake make dir
      
      - name: Install packages
        run: sudo apt install g++-multilib
  
      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_COMPILER=g++-10

      - name: Set to 32 bit
        run: cmake -D CMAKE_CXX_FLAGS=-m32 . && make

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . 
        
      # Output build file info to confirm it is 32 bit
      - name: Run file command
        run: |
          file myexample
          
      - name: Create Artifact
        run: |
          mkdir artf
          cp build/myexample artf/solution
        
      - name: Publish
        uses: actions/upload-artifact@v3
        with:
          name: 32-bit build
          path: artf
        
  build64:
    runs-on: [self-hosted, windows]
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v3

        - name: Create Build Directory
          run: cmake -E make_directory ${{runner.workspace}}/bld
               echo cmake make dir

        - name: Install packages
          run: sudo apt install g++-multilib

        - name: Configure CMake
          shell: bash
          working-directory: ${{runner.workspace}}/bld
          run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_COMPILER=g++-10

        - name: Set to 64 bit
          run: cmake -D CMAKE_CXX_FLAGS=-m64 . && make

        - name: Build
          working-directory: ${{runner.workspace}}/bld
          shell: bash
          run: cmake --build . 

        # Output build file info to confirm it is 32 bit
        - name: Run file command
          run: |
            file myexample

        - name: Create Artifact
          run: |
            mkdir artf
            cp build/myexample artf/solution64

        - name: Publish
          uses: actions/upload-artifact@v3
          with:
            name: 64-bit build
            path: artf

